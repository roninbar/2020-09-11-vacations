{"version":3,"sources":["features/userSlice.js","features/vacationsSlice.js","pages/login-form.js","actions/user.js","components/private-route.js","pages/signup-form.js","components/vacation.js","pages/home-page.js","actions/vacations.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["reset","user","id","name","role","userSlice","createSlice","initialState","error","reducers","login","payload","logout","authError","status","statusText","actions","vacationsSlice","loading","vacations","requestAllVacations","state","receiveAllVacations","receiveOneVacation","rest","vacation","find","v","Object","assign","push","setFollowing","isFollowing","truncate","LoginForm","props","username","password","submitted","e","preventDefault","this","logIn","history","setState","replace","target","value","classes","className","root","noValidate","autoComplete","onSubmit","bind","TextField","variant","type","label","onChange","onChangeField","Button","color","size","disabled","Component","withRedux","connect","dispatch","a","body","URLSearchParams","set","fetch","method","response","json","logInAsync","withRouter","withStyles","theme","margin","spacing","width","component","render","to","pathname","referer","location","SignupForm","firstname","lastname","password2","available","helperText","ref","submitButton","prevProps","prevUsername","entities","Html5Entities","maxWidth","media","height","desc","from","picture","price","followers","onChangeFollowing","Card","CardMedia","image","title","CardContent","Typography","gutterBottom","decode","toDateString","CardActions","Badge","badgeContent","ToggleButton","selected","Boolean","HomePage","vacationId","logOut","onClick","Grid","container","map","item","key","xs","sm","md","lg","xl","Date","loadVacations","headers","JSON","stringify","setFollowingAsync","padding","backgroundColor","float","App","exact","path","configureStore","reducer","userReducer","vacationsReducer","window","hostname","match","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc050890.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nfunction reset(user) {\r\n    user.id = 0;\r\n    user.name = '';\r\n    user.role = '';\r\n}\r\n\r\nconst userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        error: false,\r\n        id: 0,\r\n        name: '',\r\n        role: '',\r\n    },\r\n    reducers: {\r\n        login(user, { payload: { id, name, role } }) {\r\n            user.error = false;\r\n            user.id = id;\r\n            user.name = name;\r\n            user.role = role;\r\n        },\r\n        logout(user) {\r\n            user.error = false;\r\n            reset(user);\r\n        },\r\n        authError(user) {\r\n            user.error = true;\r\n            reset(user);\r\n        },\r\n        error(user, { payload: { status, statusText } }) {\r\n            user.error = { status, statusText };\r\n            reset(user);\r\n        },\r\n    },\r\n});\r\n\r\nexport const { login, logout, authError, error } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst vacationsSlice = createSlice({\r\n    name: 'vacations',\r\n    initialState: {\r\n        error: false,\r\n        loading: false,\r\n        vacations: [],\r\n    },\r\n    reducers: {\r\n        requestAllVacations(state) {\r\n            state.error = false;\r\n            state.loading = true;\r\n        },\r\n        receiveAllVacations(state, { payload: vacations }) {\r\n            state.error = false;\r\n            state.loading = false;\r\n            state.vacations = vacations;\r\n        },\r\n        receiveOneVacation(state, { payload: { id, ...rest } }) {\r\n            state.error = false;\r\n            state.loading = false;\r\n            const vacation = state.vacations.find(v => v.id === id);\r\n            if (vacation) {\r\n                Object.assign(vacation, { ...rest });\r\n            } else {\r\n                state.vacations.push({ id, ...rest });\r\n            }\r\n        },\r\n        setFollowing(state, { payload: { id, isFollowing } }) {\r\n            state.error = false;\r\n            const vacation = state.vacations.find(v => v.id === id);\r\n            if (vacation) {\r\n                vacation.isFollowing = isFollowing;\r\n            } else {\r\n                state.error = { status: 404, statusText: 'Not Found' };\r\n            }\r\n        },\r\n        truncate(state) {\r\n            state.error = false;\r\n            state.vacations = [];\r\n        },\r\n        error(state, { payload: { status, statusText } }) {\r\n            state.error = { status, statusText };\r\n        },\r\n    },\r\n});\r\n\r\nexport const { requestAllVacations, receiveAllVacations, receiveOneVacation, setFollowing, truncate, error } = vacationsSlice.actions;\r\n\r\nexport default vacationsSlice.reducer;\r\n\r\n","import { Button } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { logInAsync } from 'actions/user';\r\n\r\nclass LoginForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            submitted: false,\r\n        };\r\n    }\r\n\r\n    async onSubmit(e) {\r\n        e.preventDefault();\r\n        const { logIn, history } = this.props;\r\n        const { username, password } = this.state;\r\n        this.setState({ submitted: true });\r\n        await logIn(username, password);\r\n        history.replace('/');\r\n    }\r\n\r\n    onChangeField({ target: { name, value } }) {\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { username, password, submitted } = this.state;\r\n        return (\r\n            <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={this.onSubmit.bind(this)}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    label=\"Username\"\r\n                    value={username}\r\n                    onChange={this.onChangeField.bind(this)} />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    value={password}\r\n                    onChange={this.onChangeField.bind(this)}\r\n                />\r\n                <Button type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    disabled={!username || !password || submitted}\r\n                >Log In</Button>\r\n            </form>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root, & .MuiButton-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        '& .MuiTextField-root': {\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({ logIn: (username, password) => dispatch(logInAsync(username, password)) });\r\n\r\nconst withRedux = connect(null, mapDispatchToProps);\r\n\r\nexport default withRedux(withRouter(withStyles(styles)(LoginForm)));\r\n\r\n","import { authError, error, login, logout } from 'features/userSlice';\r\nimport { truncate } from 'features/vacationsSlice';\r\n\r\nexport function logInAsync(username, password) {\r\n    return async function (dispatch) {\r\n        const body = new URLSearchParams();\r\n        body.set('username', username);\r\n        body.set('password', password);\r\n        const response = await fetch('/user/login', {\r\n            method: 'POST',\r\n            body,\r\n        });\r\n        if (200 <= response.status && response.status < 300) {\r\n            dispatch(login(await response.json()));\r\n        } else if (400 <= response.status && response.status < 500) {\r\n            dispatch(authError());\r\n        } else {\r\n            dispatch(error(response));\r\n        }\r\n    };\r\n}\r\n\r\nexport function logOutAsync() {\r\n    return async function (dispatch) {\r\n        const { status, statusText } = await fetch('/user/logout', { method: 'POST' });\r\n        if (200 <= status && status < 300) {\r\n            return dispatch(truncate()) && dispatch(logout());\r\n        } else {\r\n            return dispatch(error({ status, statusText }));\r\n        }\r\n    };\r\n}\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\n// https://medium.com/better-programming/building-basic-react-authentication-e20a574d5e71\r\n\r\nfunction PrivateRoute({ username, component: Component, ...rest }) {\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        username ? (\r\n          <Component {...props} />\r\n        ) : (\r\n            <Redirect\r\n              to={{ pathname: '/login', state: { referer: props.location } }}\r\n            />\r\n          )\r\n      }\r\n    />\r\n  );\r\n  \r\n}\r\n\r\nconst withRedux = connect(({ user: { name: username } }) => ({ username }), null);\r\n\r\nexport default withRedux(PrivateRoute);","import { Button, TextField, withStyles } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass SignupForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            username: '',\r\n            password: '',\r\n            password2: '',\r\n            available: true,\r\n            submitted: false,\r\n        };\r\n    }\r\n\r\n    onChange({ target: { name, value } }) {\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    async onSubmit(e) {\r\n        e.preventDefault();\r\n        this.setState({ submitted: true });\r\n        try {\r\n            const { firstname, lastname, username, password } = this.state;\r\n            const body = new URLSearchParams();\r\n            body.set('firstname', firstname);\r\n            body.set('lastname', lastname);\r\n            body.set('username', username);\r\n            body.set('password', password);\r\n            const { status } = await fetch('/user', {\r\n                method: 'POST',\r\n                body,\r\n            });\r\n            if (status === 201) {\r\n                this.setState({\r\n                    firstname: '',\r\n                    lastname: '',\r\n                    username: '',\r\n                    password: '',\r\n                    password2: '',\r\n                });\r\n            }\r\n        } finally {\r\n            this.setState({ submitted: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { firstname, lastname, username, available, password, password2, submitted } = this.state;\r\n        const { classes } = this.props;\r\n        return (\r\n            <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={this.onSubmit.bind(this)}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name=\"firstname\"\r\n                    label=\"First Name\"\r\n                    helperText={!firstname && 'Required.'}\r\n                    error={!firstname}\r\n                    value={firstname}\r\n                    onChange={this.onChange.bind(this)}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name=\"lastname\"\r\n                    label=\"Last Name\"\r\n                    helperText={!lastname && 'Required.'}\r\n                    error={!lastname}\r\n                    value={lastname}\r\n                    onChange={this.onChange.bind(this)}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    label=\"Username\"\r\n                    helperText={!username ? 'Required.' : !available && `\"${username}\" is not available.`}\r\n                    error={!username || !available}\r\n                    value={username}\r\n                    onChange={this.onChange.bind(this)}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    helperText={!password && 'Required.'}\r\n                    error={!password}\r\n                    value={password}\r\n                    onChange={this.onChange.bind(this)}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"password\"\r\n                    name=\"password2\"\r\n                    label=\"Repeat Password\"\r\n                    helperText={password !== password2 && 'Passwords don\\'t match.'}\r\n                    error={password !== password2}\r\n                    value={password2}\r\n                    onChange={this.onChange.bind(this)}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    disabled={!firstname || !lastname || !username || !available || !password || password !== password2 || submitted}\r\n                    ref={this.submitButton}\r\n                >Sign Up</Button>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    async componentDidUpdate(prevProps, { username: prevUsername }) {\r\n        const { username } = this.state;\r\n        if (username && username !== prevUsername) {\r\n            const { status } = await fetch(`/user/${username}`, { method: 'HEAD' });\r\n            this.setState({ available: status === 404 });\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root, & .MuiButton-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        '& .MuiTextField-root': {\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nexport default withRouter(withStyles(styles)(SignupForm));","import { Badge, Card, CardActions, CardContent, CardMedia, Typography, withStyles } from '@material-ui/core';\r\nimport { ToggleButton } from '@material-ui/lab';\r\nimport { Html5Entities } from 'html-entities';\r\nimport React from 'react';\r\n\r\nconst entities = new Html5Entities();\r\n\r\nfunction Vacation({ classes, desc, from, to, picture, price, followers, isFollowing, onChangeFollowing }) {\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardMedia\r\n                className={classes.media}\r\n                image={picture}\r\n                title={desc}\r\n            />\r\n            <CardContent>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                    {desc}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                    {entities.decode(`${from.toDateString()}&ndash;${to.toDateString()}`)}\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                    &euro;{price}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Badge badgeContent={followers} color=\"primary\">\r\n                    <ToggleButton value=\"check\" selected={Boolean(isFollowing)} onChange={() => onChangeFollowing(!isFollowing)} >\r\n                        <Typography variant=\"button\">\r\n                            Follow\r\n                        </Typography>\r\n                    </ToggleButton>\r\n                </Badge>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n};\r\n\r\nexport default withStyles(styles)(Vacation);\r\n\r\n","import { Grid, Typography, withStyles } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { logOutAsync } from 'actions/user';\r\nimport { loadVacationsAsync, setFollowingAsync } from 'actions/vacations';\r\nimport Vacation from 'components/vacation';\r\n\r\nclass HomePage extends Component {\r\n\r\n    onChangeFollowing(vacationId, isFollowing) {\r\n        this.props.setFollowing(vacationId, isFollowing);\r\n    }\r\n\r\n    render() {\r\n        const { classes, username, logOut, vacations } = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <Typography className={classes.logout}>\r\n                    {username} (<Link to=\"/login\" onClick={logOut}>log out</Link>)\r\n                </Typography>\r\n                <Grid container spacing={4}>\r\n                    {vacations.map(({ id, from, to, ...rest }) => (\r\n                        <Grid item key={id} xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                            <Vacation\r\n                                from={new Date(from)}\r\n                                to={new Date(to)}\r\n                                {...rest}\r\n                                onChangeFollowing={this.onChangeFollowing.bind(this, id)}\r\n                            />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.loadVacations();\r\n    }\r\n\r\n}\r\n\r\nconst styles = {\r\n    root: {\r\n        padding: '2rem',\r\n        backgroundColor: '#f5f5f5',\r\n    },\r\n    logout: {\r\n        float: 'right',\r\n    },\r\n};\r\n\r\nconst mapStateToProps = ({ user: { name: username }, vacations: { vacations } }) => ({ username, vacations });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    logOut: () => dispatch(logOutAsync()),\r\n    loadVacations: () => dispatch(loadVacationsAsync()),\r\n    setFollowing: (vacationId, isFollowing) => dispatch(setFollowingAsync(vacationId, isFollowing)),\r\n});\r\n\r\nconst withRedux = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default withRedux(withRouter(withStyles(styles)(HomePage)));\r\n\r\n","import { error, receiveAllVacations, receiveOneVacation, requestAllVacations, setFollowing } from 'features/vacationsSlice';\r\n\r\nexport function loadVacationsAsync() {\r\n    return async function (dispatch) {\r\n        dispatch(requestAllVacations());\r\n        const response = await fetch('/vacation/all');\r\n        if (200 <= response.status && response.status < 300) {\r\n            const vacations = await response.json();\r\n            return dispatch(receiveAllVacations(vacations));\r\n        }\r\n        else {\r\n            return dispatch(error(response));\r\n        }\r\n    };\r\n}\r\n\r\nexport function setFollowingAsync(id, isFollowing) {\r\n    return async function (dispatch) {\r\n        dispatch(setFollowing({ id, isFollowing }));\r\n        const response = await fetch(`/vacation/${id}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                isFollowing,\r\n            }),\r\n        });\r\n        if (200 <= response.status && response.status < 300) {\r\n            const vacation = await response.json();\r\n            return dispatch(receiveOneVacation(vacation));\r\n        } else {\r\n            return dispatch(error(response));\r\n        }\r\n    };\r\n}\r\n\r\n","import './App.css';\r\nimport React from 'react';\r\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom';\r\nimport LoginForm from './pages/login-form';\r\nimport PrivateRoute from './components/private-route';\r\nimport SignupForm from './pages/signup-form';\r\nimport HomePage from './pages/home-page';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/signup\">\r\n          <SignupForm />\r\n          <Link to=\"/login\">Already have an account?</Link>\r\n        </Route>\r\n        <Route exact path=\"/login\">\r\n          <LoginForm />\r\n          <Link to=\"/signup\">Don't have an account yet?</Link>\r\n        </Route>\r\n        <PrivateRoute exact path=\"/\" component={HomePage} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from 'features/userSlice';\r\nimport vacationsReducer from 'features/vacationsSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n    vacations: vacationsReducer,\r\n  },\r\n});\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}