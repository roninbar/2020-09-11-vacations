{"version":3,"sources":["features/utils.js","features/userSlice.js","components/private-route.js","components/vacation.js","features/vacationsSlice.js","pages/delete-dialog.js","pages/home-page.js","pages/login-form.js","pages/signup-form.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["requestJson","url","options","a","fetch","response","status","statusText","json","Error","logInAsync","createAsyncThunk","username","password","body","URLSearchParams","set","method","logOutAsync","reset","user","id","name","role","userSlice","createSlice","initialState","error","extraReducers","pending","loading","fulfilled","payload","rejected","withRedux","connect","Component","component","rest","render","props","to","pathname","state","referer","location","entities","Html5Entities","TextField","withStyles","form","flexGrow","display","flexFlow","classes","onSubmit","onClickAway","ClickAwayListener","className","fullWidth","Vacation","editing","fields","this","setState","what","target","value","setField","date","format","e","preventDefault","fireChangeFields","key","quitEditing","_","isEmpty","onChangeFields","innerText","destination","from","price","description","image","followers","isFollowing","onChangeFollowing","onDelete","userRole","Card","root","CardMedia","media","title","variant","autoFocus","type","onChange","bind","onSubmitTextField","onKeyUp","inputProps","pattern","imageEditTextField","IconButton","imageEditButton","onClick","onClickEditButton","CardContent","Typography","contentRow","gutterBottom","onSubmitDates","datesForm","disablePast","disableToolbar","margin","label","onChangeDate","onAccept","onAcceptDate","Button","Box","fontWeight","onBlur","decode","toDateString","contentEditable","suppressContentEditableWarning","CardActions","actions","Badge","badgeContent","color","ToggleButton","selected","Boolean","PureComponent","position","height","right","bottom","left","opacity","backgroundColor","flexDirection","alignItems","border","borderRadius","loadAllAsync","loadOneAsync","changeAsync","headers","JSON","stringify","deleteAsync","updateVacation","vacation","vacations","find","v","Object","assign","push","vacationsSlice","reducers","setFollowing","meta","arg","DialogTitle","theme","padding","spacing","closeButton","top","palette","grey","children","onClose","other","disableTypography","content","okButton","transitionProperty","start","finish","open","onOk","onCancel","Dialog","DialogContent","dividers","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","colSpan","TableBody","scope","DialogActions","HomePage","idToDelete","vacationId","destinationToDelete","startToDelete","finishToDelete","Container","maxWidth","utils","MomentUtils","Grid","container","map","item","xs","sm","md","xl","onOkDelete","onCancelDelete","Backdrop","loadingBackdrop","LinearProgress","progress","length","emptyBackdrop","Snackbar","message","Alert","severity","elevation","mapDispatchToProps","Date","withRouter","logout","float","zIndex","drawer","width","LoginForm","history","submitted","noValidate","autoComplete","onChangeField","size","disabled","CircularProgress","SignupForm","firstname","lastname","password2","available","helperText","ref","submitButton","prevProps","prevUsername","menuButton","marginRight","AppBar","Toolbar","edge","aria-label","exact","path","configureStore","reducer","userReducer","vacationsReducer","window","hostname","match","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.57140998.chunk.js","sourcesContent":["export async function requestJson(url, options) {\r\n    const response = await fetch(url, options);\r\n    const { status, statusText } = response;\r\n    if (200 <= status && status < 300) {\r\n        return await response.json();\r\n    }\r\n    else {\r\n        throw new Error(`${status} ${statusText}`);\r\n    }\r\n}\r\n\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { requestJson } from './utils';\r\n\r\nexport const logInAsync = createAsyncThunk(\r\n    'user/login',\r\n    async function ({ username, password }) {\r\n        const body = new URLSearchParams();\r\n        body.set('username', username);\r\n        body.set('password', password);\r\n        return await requestJson('/user/login', {\r\n            method: 'POST',\r\n            body,\r\n        });\r\n    },\r\n);\r\n\r\nexport const logOutAsync = createAsyncThunk(\r\n    'user/logout',\r\n    async function () {\r\n        const { status, statusText } = await fetch('/user/logout', { method: 'POST' });\r\n        if (200 <= status && status < 300) {\r\n            return statusText;\r\n        } else {\r\n            throw new Error(`${status} ${statusText}`);\r\n        }\r\n    },\r\n);\r\n\r\nconst userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        error: false,\r\n        id: 0,\r\n        name: '',\r\n        role: '',\r\n    },\r\n    extraReducers: {\r\n        [logInAsync.pending](user) {\r\n            user.error = false;\r\n            user.loading = true;\r\n        },\r\n        [logInAsync.fulfilled](user, { payload: { id, name, role } }) {\r\n            user.loading = false;\r\n            user.error = false;\r\n            user.id = id;\r\n            user.name = name;\r\n            user.role = role;\r\n        },\r\n        [logInAsync.rejected](user, { error }) {\r\n            user.loading = false;\r\n            user.error = error;\r\n            reset(user);\r\n        },\r\n        [logOutAsync.pending](user) {\r\n            user.error = false;\r\n            user.loading = true;\r\n        },\r\n        [logOutAsync.fulfilled](user) {\r\n            user.loading = false;\r\n            user.error = false;\r\n            reset(user);\r\n        },\r\n        [logOutAsync.rejected](user, { error }) {\r\n            user.loading = false;\r\n            user.error = error;\r\n        },\r\n    },\r\n});\r\n\r\nfunction reset(user) {\r\n    user.id = 0;\r\n    user.name = '';\r\n    user.role = '';\r\n}\r\n\r\nexport default userSlice.reducer;\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\n// https://medium.com/better-programming/building-basic-react-authentication-e20a574d5e71\r\n\r\nfunction PrivateRoute({ username, component: Component, ...rest }) {\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        username ? (\r\n          <Component {...props} />\r\n        ) : (\r\n            <Redirect\r\n              to={{ pathname: '/login', state: { referer: props.location } }}\r\n            />\r\n          )\r\n      }\r\n    />\r\n  );\r\n  \r\n}\r\n\r\nconst withRedux = connect(({ user: { name: username } }) => ({ username }), null);\r\n\r\nexport default withRedux(PrivateRoute);","import { Badge, Box, Button, Card, CardActions, CardContent, CardMedia, ClickAwayListener, IconButton, TextField as MuiTextField, Typography, withStyles } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { ToggleButton } from '@material-ui/lab';\r\nimport { KeyboardDatePicker } from '@material-ui/pickers';\r\nimport { Html5Entities } from 'html-entities';\r\nimport _ from 'lodash';\r\nimport React, { PureComponent } from 'react';\r\n\r\nconst entities = new Html5Entities();\r\n\r\nconst TextField = withStyles({\r\n    form: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexFlow: 'row nowrap',\r\n    },\r\n})(\r\n    function ({ classes, onSubmit, onClickAway, ...rest }) {\r\n        return (\r\n            <ClickAwayListener onClickAway={onClickAway}>\r\n                <form className={classes.form} onSubmit={onSubmit}>\r\n                    <MuiTextField fullWidth={true} {...rest} />\r\n                </form>\r\n            </ClickAwayListener>\r\n        );\r\n    }\r\n)\r\n\r\nclass Vacation extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editing: 'nothing',\r\n            fields: {},\r\n        };\r\n    }\r\n\r\n    quitEditing() {\r\n        this.setState({\r\n            fields: {},\r\n            editing: 'nothing',\r\n        });\r\n    }\r\n\r\n    onClickEditButton(what) {\r\n        this.setState({\r\n            editing: what,\r\n        });\r\n    }\r\n\r\n    onChange({ target: { name, value } }) {\r\n        this.setField(name, value);\r\n    }\r\n\r\n    onChangeDate(name, date, value) {\r\n        this.setField(name, value);\r\n    }\r\n\r\n    onAcceptDate(name, date) {\r\n        this.setField(name, date.format('yyyy-MM-DD'));\r\n    }\r\n\r\n    setField(name, value) {\r\n        const { fields } = this.state;\r\n        this.setState({\r\n            fields: {\r\n                ...fields,\r\n                [name]: value,\r\n            },\r\n        });\r\n    }\r\n\r\n    onSubmitTextField(e) {\r\n        e.preventDefault();\r\n        this.fireChangeFields();\r\n    }\r\n\r\n    onSubmitDates(e) {\r\n        e.preventDefault();\r\n        this.fireChangeFields();\r\n    }\r\n\r\n    onKeyUp(e) {\r\n        if (e.key === 'Escape') {\r\n            this.quitEditing();\r\n        }\r\n    }\r\n\r\n    onClickAway() {\r\n        this.fireChangeFields();\r\n    }\r\n\r\n    fireChangeFields() {\r\n        const { fields } = this.state;\r\n        if (!_.isEmpty(fields)) {\r\n            const { onChangeFields } = this.props;\r\n            onChangeFields(fields);\r\n        }\r\n        this.quitEditing();\r\n    }\r\n\r\n    /**\r\n     * Method to call when a content-editable element loses focus.\r\n     * @param {string} name Name of field to update\r\n     * @param {Event} param1 \"Blur\" event\r\n     */\r\n    onBlur(name, { target: { innerText: value } }) {\r\n        const { onChangeFields, [name]: prevValue } = this.props;\r\n        if (value !== prevValue) {\r\n            return onChangeFields({ [name]: value });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { destination, from, to, price, description, image, followers, isFollowing, onChangeFollowing, onDelete, userRole, classes } = this.props;\r\n        const { editing } = this.state;\r\n\r\n        return (\r\n            <Card className={classes.root}>\r\n\r\n                <CardMedia className={classes.media + (editing === 'image' ? ' editing' : '')} image={image} title={destination}>\r\n                    {userRole === 'admin' &&\r\n                        <div className=\"overlay\">\r\n                            {editing === 'image'\r\n                                ? (\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        autoFocus\r\n                                        type=\"text\"\r\n                                        name=\"image\"\r\n                                        value={typeof this.state.fields?.image === 'string' ? this.state.fields?.image : image}\r\n                                        onChange={this.onChange.bind(this)}\r\n                                        onSubmit={this.onSubmitTextField.bind(this)}\r\n                                        onClickAway={this.onClickAway.bind(this)}\r\n                                        onKeyUp={this.onKeyUp.bind(this)}\r\n                                        inputProps={{\r\n                                            pattern: '^(?:([A-Za-z]+):)?(\\\\/{0,3})([0-9.\\\\-A-Za-z]+)(?::(\\\\d+))?(?:\\\\/([^?#]*))?(?:\\\\?([^#]*))?(?:#(.*))?$',\r\n                                        }}\r\n                                        className={classes.imageEditTextField}\r\n                                    />)\r\n                                : (\r\n                                    <IconButton className={classes.imageEditButton} onClick={this.onClickEditButton.bind(this, 'image')}>\r\n                                        <EditIcon />\r\n                                    </IconButton>)\r\n                            }\r\n                        </div>\r\n                    }\r\n                </CardMedia>\r\n\r\n                <CardContent>\r\n\r\n                    {/* Destination */}\r\n                    {editing === 'destination'\r\n                        ? (\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                name=\"destination\"\r\n                                value={typeof this.state.fields?.destination === 'string' ? this.state.fields?.destination : destination}\r\n                                onChange={this.onChange.bind(this)}\r\n                                onSubmit={this.onSubmitTextField.bind(this)}\r\n                                onClickAway={this.onClickAway.bind(this)}\r\n                                onKeyUp={this.onKeyUp.bind(this)}\r\n                                autoFocus\r\n                            />\r\n                        ) : (\r\n                            <Typography className={classes.contentRow} variant=\"h5\" gutterBottom>\r\n                                {destination}\r\n                                {userRole === 'admin' && editing === 'nothing' &&\r\n                                    <div className=\"overlay\">\r\n                                        <IconButton onClick={this.onClickEditButton.bind(this, 'destination')}>\r\n                                            <EditIcon />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                }\r\n                            </Typography>\r\n                        )\r\n                    }\r\n\r\n                    {/* Dates */}\r\n                    {editing === 'dates'\r\n                        ? (\r\n                            <ClickAwayListener onClickAway={this.onClickAway.bind(this)}>\r\n                                <form onSubmit={this.onSubmitDates.bind(this)} className={classes.datesForm}>\r\n                                    <KeyboardDatePicker\r\n                                        disablePast\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"yyyy-MM-DD\"\r\n                                        margin=\"normal\"\r\n                                        label=\"Start Date\"\r\n                                        name=\"from\"\r\n                                        value={this.state.fields?.from || from}\r\n                                        onChange={this.onChangeDate.bind(this, 'from')}\r\n                                        onAccept={this.onAcceptDate.bind(this, 'from')}\r\n                                    />\r\n                                    <KeyboardDatePicker\r\n                                        disablePast\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"yyyy-MM-DD\"\r\n                                        margin=\"normal\"\r\n                                        label=\"End Date\"\r\n                                        name=\"to\"\r\n                                        value={this.state.fields?.to || to}\r\n                                        onChange={this.onChangeDate.bind(this, 'to')}\r\n                                        onAccept={this.onAcceptDate.bind(this, 'to')}\r\n                                    />\r\n                                    <Button type=\"submit\">Update</Button>\r\n                                </form>\r\n                            </ClickAwayListener>)\r\n                        : (\r\n                            <Typography className={classes.contentRow} variant=\"subtitle1\" gutterBottom>\r\n                                <Box fontWeight=\"fontWeightBold\"\r\n                                    onBlur={this.onBlur.bind(this, 'dates')}\r\n                                >\r\n                                    {entities.decode(`${from.toDateString()}&ndash;${to.toDateString()}`)}\r\n                                </Box>\r\n                                {userRole === 'admin' && editing === 'nothing' &&\r\n                                    <div className=\"overlay\">\r\n                                        <IconButton onClick={this.onClickEditButton.bind(this, 'dates')}>\r\n                                            <EditIcon />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                }\r\n                            </Typography>\r\n                        )\r\n                    }\r\n\r\n                    {/* Description */}\r\n                    <Typography\r\n                        className={classes.contentRow}\r\n                        variant=\"body1\"\r\n                        gutterBottom component=\"div\"\r\n                        contentEditable={userRole === 'admin'}\r\n                        suppressContentEditableWarning={true}\r\n                        onBlur={this.onBlur.bind(this, 'description')}\r\n                    >\r\n                        {description}\r\n                    </Typography>\r\n\r\n                    {/* Price */}\r\n                    <Typography className={classes.contentRow} variant=\"h6\">\r\n                        <Box fontWeight=\"fontWeightBold\">\r\n                            &euro;\r\n                            <span\r\n                                contentEditable={userRole === 'admin'}\r\n                                suppressContentEditableWarning={true}\r\n                                onBlur={this.onBlur.bind(this, 'price')}\r\n                            >\r\n                                {price}\r\n                            </span>\r\n                        </Box>\r\n                    </Typography>\r\n\r\n                </CardContent>\r\n\r\n                <CardActions className={classes.actions}>\r\n                    {userRole === 'user' &&\r\n                        <Badge badgeContent={followers} color=\"primary\">\r\n                            <ToggleButton value=\"check\" selected={Boolean(isFollowing)} onChange={() => onChangeFollowing(!isFollowing)} >\r\n                                <Typography variant=\"button\">Follow</Typography>\r\n                            </ToggleButton>\r\n                        </Badge>\r\n                    }\r\n                    {userRole === 'admin' &&\r\n                        <IconButton onClick={onDelete}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    }\r\n                </CardActions>\r\n\r\n            </Card >\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst styles = {\r\n    root: {\r\n    },\r\n    media: {\r\n        position: 'relative',\r\n        height: 140,\r\n        '& .overlay': {\r\n            display: 'flex',\r\n            flexFlow: 'row-reverse nowrap',\r\n            position: 'absolute',\r\n            right: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            opacity: 0,\r\n            backgroundColor: 'black',\r\n        },\r\n        '&:hover .overlay': {\r\n            opacity: 0.5,\r\n        },\r\n        '&.editing .overlay': {\r\n            opacity: 1,\r\n        },\r\n    },\r\n    imageEditTextField: {\r\n        backgroundColor: 'white',\r\n    },\r\n    imageEditButton: {\r\n        color: 'rgba(255, 255, 255, 1.0)',\r\n    },\r\n    contentRow: {\r\n        position: 'relative',\r\n        '& .overlay': {\r\n            display: 'none',\r\n            flexDirection: 'row-reverse',\r\n            position: 'absolute',\r\n            right: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n        },\r\n        '&:hover .overlay': {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    datesForm: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        border: '2px solid #3f51b5',\r\n        borderRadius: '3px',\r\n    },\r\n    actions: {\r\n        flexDirection: ({ userRole }) => userRole === 'admin' ? 'row-reverse' : 'row',\r\n    },\r\n};\r\n\r\nexport default withStyles(styles)(Vacation);\r\n\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { logOutAsync } from './userSlice';\r\nimport { requestJson } from './utils';\r\n\r\nexport const loadAllAsync = createAsyncThunk(\r\n    'vacations/loadAll',\r\n    requestJson.bind(null, '/vacation/all'),\r\n);\r\n\r\nexport const loadOneAsync = createAsyncThunk(\r\n    'vacations/loadOne',\r\n    async function (id) {\r\n        return await requestJson(`/vacation/${id}`);\r\n    },\r\n);\r\n\r\nexport const changeAsync = createAsyncThunk(\r\n    'vacations/change',\r\n    async function ({ id, ...rest }) {\r\n        return await requestJson(`/vacation/${id}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(rest),\r\n        });\r\n    },\r\n);\r\n\r\nexport const deleteAsync = createAsyncThunk(\r\n    'vacations/delete',\r\n    async function (id) {\r\n        return await requestJson(`/vacation/${id}`, { method: 'DELETE' });\r\n    },\r\n);\r\n\r\nfunction updateVacation(state, { id, ...rest }) {\r\n    state.loading = false;\r\n    state.error = false;\r\n    const vacation = state.vacations.find(v => v.id === id);\r\n    if (vacation) {\r\n        Object.assign(vacation, { ...rest });\r\n    } else {\r\n        state.vacations.push({ id, ...rest });\r\n    }\r\n}\r\n\r\nconst vacationsSlice = createSlice({\r\n    name: 'vacations',\r\n    initialState: {\r\n        error: false,\r\n        loading: false,\r\n        vacations: [],\r\n    },\r\n    reducers: {\r\n        /**\r\n         * This function is needed to give users immediate feedback when they press the 'Follow' button.\r\n         */\r\n        setFollowing(state, { payload: { id, isFollowing } }) {\r\n            state.error = false;\r\n            const vacation = state.vacations.find(v => v.id === id);\r\n            if (vacation) {\r\n                vacation.isFollowing = isFollowing;\r\n            } else {\r\n                state.error = new Error(`Vacation ID ${id} doesn't exist in the Redux store.`);\r\n            }\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [loadAllAsync.pending](state) {\r\n            state.error = false;\r\n            state.loading = true;\r\n        },\r\n        [loadAllAsync.fulfilled](state, { payload: vacations }) {\r\n            state.loading = false;\r\n            state.error = false;\r\n            state.vacations = vacations;\r\n        },\r\n        [loadAllAsync.rejected](state, { error }) {\r\n            state.loading = false;\r\n            state.error = error;\r\n        },\r\n        [loadOneAsync.pending](state) {\r\n            state.error = false;\r\n            state.loading = true;\r\n        },\r\n        [loadOneAsync.fulfilled](state, { payload: vacation }) {\r\n            updateVacation(state, vacation);\r\n        },\r\n        [loadOneAsync.rejected](state, { error }) {\r\n            state.loading = false;\r\n            state.error = error;\r\n        },\r\n        [changeAsync.pending](state) {\r\n            state.error = false;\r\n            state.loading = true;\r\n        },\r\n        [changeAsync.fulfilled](state, { payload: vacation }) {\r\n            updateVacation(state, vacation);\r\n        },\r\n        [changeAsync.rejected](state, { error, meta: { arg: { id, isFollowing } } }) {\r\n            state.loading = false;\r\n            state.error = error;\r\n            if (typeof isFollowing === 'boolean') {\r\n                state.vacations.find(v => v.id === id).isFollowing = !isFollowing;\r\n            }\r\n        },\r\n        [deleteAsync.pending](state) {\r\n            state.error = false;\r\n            state.loading = true;\r\n        },\r\n        [deleteAsync.fulfilled](state, { payload: vacations }) {\r\n            state.loading = false;\r\n            state.error = false;\r\n            state.vacations = vacations;\r\n        },\r\n        [deleteAsync.rejected](state, { error }) {\r\n            state.loading = false;\r\n            state.error = error;\r\n        },\r\n        [logOutAsync.fulfilled](state) {\r\n            state.error = false;\r\n            state.vacations = [];\r\n        },\r\n    }\r\n});\r\n\r\nexport const { setFollowing } = vacationsSlice.actions;\r\n\r\nexport default vacationsSlice.reducer;\r\n\r\n","import { Button, Dialog, DialogActions, DialogContent, DialogTitle as MuiDialogTitle, IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, withStyles } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport React from 'react';\r\n\r\nconst titleStyles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(titleStyles)(\r\n    function ({ children, classes, onClose, ...other }) {\r\n        return (\r\n            <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n                <Typography variant=\"h6\">{children}</Typography>\r\n                {onClose && (\r\n                    <IconButton className={classes.closeButton} onClick={onClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                )}\r\n            </MuiDialogTitle>\r\n        );\r\n    }\r\n);\r\n\r\nconst DeleteDialog = function ({ classes, destination, start, finish, open, onOk, onCancel }) {\r\n    return (\r\n        <Dialog open={open}>\r\n            <DialogTitle onClose={onCancel}>\r\n                Delete this vacation?\r\n            </DialogTitle>\r\n            <DialogContent dividers className={classes.content}>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" align=\"center\" colSpan={2}>{destination}</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">Start:</TableCell>\r\n                                <TableCell align=\"right\">{start}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">Finish:</TableCell>\r\n                                <TableCell align=\"right\">{finish}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button variant=\"text\" color=\"primary\" autoFocus className={classes.okButton} onClick={onOk}>\r\n                    Yes, delete\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    content: {\r\n        backgroundColor: '#f5f5f5',\r\n    },\r\n    okButton: {\r\n        color: '#cb2431',\r\n        backgroundColor: '#fff',\r\n        transitionProperty: 'all',\r\n        '&:hover': {\r\n            color: '#fff',\r\n            backgroundColor: '#cb2431',\r\n        },\r\n    },\r\n});\r\n\r\nexport default withStyles(styles)(DeleteDialog);\r\n\r\n","import MomentUtils from '@date-io/moment';\r\nimport { Backdrop, Button, Container, Grid, LinearProgress, Snackbar, Typography, withStyles } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport Vacation from 'components/vacation';\r\nimport { logOutAsync } from 'features/userSlice';\r\nimport { changeAsync, deleteAsync, loadAllAsync, setFollowing } from 'features/vacationsSlice';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport DeleteDialog from './delete-dialog';\r\n\r\nclass HomePage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idToDelete: 0,\r\n        };\r\n    }\r\n\r\n    onChangeFollowing(vacationId, isFollowing) {\r\n        const payload = { id: vacationId, isFollowing };\r\n        const { setFollowing, changeAsync } = this.props;\r\n        setFollowing(payload); // Give the user immediate feedback for the button press.\r\n        changeAsync(payload); // Dispatch an async action that updates the database.\r\n    }\r\n\r\n    onChangeFields(vacationId, fields) {\r\n        const { changeAsync } = this.props;\r\n        changeAsync({ id: vacationId, ...fields });\r\n    }\r\n\r\n    onDelete(vacationId) {\r\n        this.setState({ idToDelete: vacationId });\r\n    }\r\n\r\n    onCancelDelete() {\r\n        this.setState({ idToDelete: 0 });\r\n    }\r\n\r\n    onOkDelete() {\r\n        const { deleteAsync } = this.props;\r\n        const { idToDelete } = this.state;\r\n        this.setState({ idToDelete: 0 });\r\n        deleteAsync(idToDelete);\r\n    }\r\n\r\n    render() {\r\n        const { classes, userRole, vacations, loading, error } = this.props;\r\n        const { idToDelete } = this.state;\r\n        let destinationToDelete = '', startToDelete = '', finishToDelete = '';\r\n        if (idToDelete > 0) {\r\n            (\r\n                {\r\n                    destination: destinationToDelete,\r\n                    from: startToDelete,\r\n                    to: finishToDelete,\r\n                }\r\n                = vacations.find(v => v.id === idToDelete)\r\n            );\r\n            startToDelete = startToDelete.toDateString();\r\n            finishToDelete = finishToDelete.toDateString();\r\n        }\r\n        return (\r\n            <Container maxWidth=\"xl\" className={classes.root}>\r\n                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                {/* <Typography className={classes.logout}>\r\n                    {username} (<Link to=\"/login\" onClick={logOutAsync}>log out</Link>)\r\n                </Typography> */}\r\n                    <Grid container spacing={4}>\r\n                        {vacations.map(({ id, ...rest }) => (\r\n                            <Grid item key={id} xs={12} sm={6} md={4} xl={3}>\r\n                                <Vacation\r\n                                    {...rest}\r\n                                    userRole={userRole}\r\n                                    onDelete={this.onDelete.bind(this, id)}\r\n                                    onChangeFields={this.onChangeFields.bind(this, id)}\r\n                                    onChangeFollowing={this.onChangeFollowing.bind(this, id)}\r\n                                />\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                    <DeleteDialog\r\n                        destination={destinationToDelete}\r\n                        start={startToDelete}\r\n                        finish={finishToDelete}\r\n                        open={idToDelete > 0}\r\n                        onOk={this.onOkDelete.bind(this)}\r\n                        onCancel={this.onCancelDelete.bind(this)}\r\n                    />\r\n                    <Backdrop open={loading} className={classes.loadingBackdrop}>\r\n                        <LinearProgress className={classes.progress} />\r\n                    </Backdrop>\r\n                    <Backdrop open={vacations.length === 0} className={classes.emptyBackdrop}>\r\n                        <Typography variant=\"h3\" component=\"h3\">There are no vacations in the system.</Typography>\r\n                        {userRole === 'admin' ?\r\n                            <Button variant=\"outlined\">Click here to add some.</Button> :\r\n                            <Typography variant=\"h5\">Please try again later.</Typography>\r\n                        }\r\n                    </Backdrop>\r\n                    <Snackbar open={typeof error?.message === 'string'}>\r\n                        <Alert variant=\"filled\" severity=\"error\" elevation={6}>{error?.message}</Alert>\r\n                    </Snackbar>\r\n                </MuiPickersUtilsProvider>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { loadAllAsync } = this.props;\r\n        loadAllAsync();\r\n    }\r\n\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        padding: '2rem',\r\n        backgroundColor: '#f5f5f5',\r\n    },\r\n    logout: {\r\n        float: 'right',\r\n    },\r\n    loadingBackdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    progress: {\r\n        width: '90%',\r\n    },\r\n    emptyBackdrop: {\r\n        flexDirection: 'column',\r\n    },\r\n});\r\n\r\nconst mapStateToProps = ({\r\n    user: {\r\n        name: username,\r\n        role: userRole,\r\n    },\r\n    vacations: {\r\n        error,\r\n        loading,\r\n        vacations,\r\n    },\r\n}) => ({\r\n    username,\r\n    userRole,\r\n    error,\r\n    loading,\r\n    vacations: vacations.map(({\r\n        from,\r\n        to,\r\n        ...rest\r\n    }) => ({\r\n        from: new Date(from),\r\n        to: new Date(to),\r\n        ...rest,\r\n    })),\r\n});\r\n\r\nconst mapDispatchToProps = { logOutAsync, loadAllAsync, setFollowing, changeAsync, deleteAsync };\r\n\r\nconst withRedux = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default withRedux(withRouter(withStyles(styles)(HomePage)));\r\n\r\n","import { Button, CircularProgress, Snackbar } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { logInAsync } from 'features/userSlice';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass LoginForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n        };\r\n    }\r\n\r\n    async onSubmit(e) {\r\n        e.preventDefault();\r\n        const { logInAsync, history } = this.props;\r\n        const { username, password } = this.state;\r\n        this.setState({ submitted: true });\r\n        await logInAsync({ username, password });\r\n        history.push('/');\r\n    }\r\n\r\n    onChangeField({ target: { name, value } }) {\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    render() {\r\n        const { classes, loading, error } = this.props;\r\n        const { username, password } = this.state;\r\n        return (\r\n            <div className={classes.root}>\r\n                <form noValidate autoComplete=\"off\" onSubmit={this.onSubmit.bind(this)}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        label=\"Username\"\r\n                        value={username}\r\n                        onChange={this.onChangeField.bind(this)} />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        value={password}\r\n                        onChange={this.onChangeField.bind(this)}\r\n                    />\r\n                    <Button type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        disabled={!username || !password || loading}\r\n                    >\r\n                        {loading ? <CircularProgress></CircularProgress> : 'Log In'}\r\n                    </Button>\r\n                </form>\r\n                <Snackbar open={error}>\r\n                    <Alert variant=\"filled\" severity=\"error\" elevation={6}>{error.message}</Alert>\r\n                </Snackbar>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root, & .MuiButton-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        '& .MuiTextField-root': {\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst withRedux = connect(({ user: { loading, error } }) => ({ loading, error }), { logInAsync });\r\n\r\nexport default withRedux(withRouter(withStyles(styles)(LoginForm)));\r\n\r\n","import { Button, TextField, withStyles } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass SignupForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            username: '',\r\n            password: '',\r\n            password2: '',\r\n            available: true,\r\n            submitted: false,\r\n        };\r\n    }\r\n\r\n    onChange({ target: { name, value } }) {\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    async onSubmit(e) {\r\n        e.preventDefault();\r\n        this.setState({ submitted: true });\r\n        try {\r\n            const { firstname, lastname, username, password } = this.state;\r\n            const body = new URLSearchParams();\r\n            body.set('firstname', firstname);\r\n            body.set('lastname', lastname);\r\n            body.set('username', username);\r\n            body.set('password', password);\r\n            const { status } = await fetch('/user', {\r\n                method: 'POST',\r\n                body,\r\n            });\r\n            if (status === 201) {\r\n                this.setState({\r\n                    firstname: '',\r\n                    lastname: '',\r\n                    username: '',\r\n                    password: '',\r\n                    password2: '',\r\n                });\r\n            }\r\n        } finally {\r\n            this.setState({ submitted: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { firstname, lastname, username, available, password, password2, submitted } = this.state;\r\n        const { classes } = this.props;\r\n        return (\r\n            <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={this.onSubmit.bind(this)}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name=\"firstname\"\r\n                    label=\"First Name\"\r\n                    helperText={!firstname && 'Required.'}\r\n                    error={!firstname}\r\n                    value={firstname}\r\n                    onChange={this.onChange.bind(this)}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name=\"lastname\"\r\n                    label=\"Last Name\"\r\n                    helperText={!lastname && 'Required.'}\r\n                    error={!lastname}\r\n                    value={lastname}\r\n                    onChange={this.onChange.bind(this)}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    label=\"Username\"\r\n                    helperText={!username ? 'Required.' : !available && `\"${username}\" is not available.`}\r\n                    error={!username || !available}\r\n                    value={username}\r\n                    onChange={this.onChange.bind(this)}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    helperText={!password && 'Required.'}\r\n                    error={!password}\r\n                    value={password}\r\n                    onChange={this.onChange.bind(this)}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"password\"\r\n                    name=\"password2\"\r\n                    label=\"Repeat Password\"\r\n                    helperText={password !== password2 && 'Passwords don\\'t match.'}\r\n                    error={password !== password2}\r\n                    value={password2}\r\n                    onChange={this.onChange.bind(this)}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    disabled={!firstname || !lastname || !username || !available || !password || password !== password2 || submitted}\r\n                    ref={this.submitButton}\r\n                >Sign Up</Button>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    async componentDidUpdate(prevProps, { username: prevUsername }) {\r\n        const { username } = this.state;\r\n        if (username && username !== prevUsername) {\r\n            const { status } = await fetch(`/user/${username}`, { method: 'HEAD' });\r\n            this.setState({ available: status === 404 });\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root, & .MuiButton-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        '& .MuiTextField-root': {\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nexport default withRouter(withStyles(styles)(SignupForm));","import './App.css';\r\nimport { AppBar, Button, Container, IconButton, Toolbar, Typography, withStyles } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { logOutAsync } from 'features/userSlice';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom';\r\nimport PrivateRoute from './components/private-route';\r\nimport HomePage from './pages/home-page';\r\nimport LoginForm from './pages/login-form';\r\nimport SignupForm from './pages/signup-form';\r\n\r\nfunction App({ classes, username, logOutAsync }) {\r\n  return (\r\n    <BrowserRouter>\r\n      <Container maxWidth=\"xl\" className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>Vacations</Typography>\r\n            {username ?\r\n              <Button color=\"inherit\" onClick={logOutAsync}>Log Out</Button> :\r\n              <Button color=\"inherit\">Log In</Button>}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Switch>\r\n          <Route exact path=\"/signup\">\r\n            <SignupForm />\r\n            <Link to=\"/login\">Already have an account?</Link>\r\n          </Route>\r\n          <Route exact path=\"/login\">\r\n            <LoginForm />\r\n            <Link to=\"/signup\">Don't have an account yet?</Link>\r\n          </Route>\r\n          <PrivateRoute exact path=\"/\" component={HomePage} />\r\n        </Switch>\r\n      </Container>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  logout: {\r\n    float: 'right',\r\n  },\r\n});\r\n\r\nfunction mapStateToProps({ user: { name: username } }) {\r\n  return { username };\r\n}\r\n\r\nconst mapDispatchToProps = { logOutAsync };\r\n\r\nconst withRedux = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default withRedux(withStyles(styles)(App));\r\n\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from 'features/userSlice';\r\nimport vacationsReducer from 'features/vacationsSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n    vacations: vacationsReducer,\r\n  },\r\n});\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}