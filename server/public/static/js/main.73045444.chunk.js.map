{"version":3,"sources":["actions/user.js","pages/login-form.js","components/private-route.js","pages/signup-form.js","actions/vacations.js","components/vacation.js","pages/home-page.js","App.js","features/counter/counterSlice.js","app/store.js","reducers/user.js","reducers/vacations.js","serviceWorker.js","index.js"],"names":["loginAction","user","type","payload","LoginForm","props","state","username","password","submitted","e","preventDefault","this","logIn","history","setState","replace","target","name","value","classes","className","root","noValidate","autoComplete","onSubmit","bind","TextField","variant","label","onChange","onChangeField","Button","color","size","disabled","Component","withRedux","connect","dispatch","a","body","URLSearchParams","set","fetch","method","response","status","json","logInAsync","withRouter","withStyles","theme","margin","spacing","width","component","rest","render","to","pathname","referer","location","SignupForm","firstname","lastname","password2","available","helperText","error","ref","submitButton","prevProps","prevUsername","setFollowing","id","isFollowing","statusText","entities","Html5Entities","maxWidth","media","height","desc","from","picture","price","followers","onChangeFollowing","Card","CardMedia","image","title","CardContent","Typography","gutterBottom","decode","toDateString","CardActions","Badge","badgeContent","ToggleButton","selected","Boolean","HomePage","vacationId","logOut","vacations","logout","onClick","Grid","container","map","item","key","xs","sm","md","lg","xl","Date","loadVacations","headers","JSON","stringify","vacation","setFollowingAsync","padding","backgroundColor","float","App","exact","path","counterSlice","createSlice","initialState","reducers","increment","decrement","incrementByAmount","action","actions","configureStore","reducer","counter","counterReducer","data","loading","window","hostname","match","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.73045444.chunk.js","sourcesContent":["export const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const UNKNOWN_ERROR = 'UNKNOWN_ERROR';\r\n\r\nfunction loginAction(user) {\r\n    return { type: LOGIN, payload: user };\r\n}\r\n\r\nfunction logoutAction() {\r\n    return { type: LOGOUT };\r\n}\r\n\r\nfunction authError() {\r\n    return { type: AUTH_ERROR };\r\n}\r\n\r\nfunction unknownError() {\r\n    return { type: UNKNOWN_ERROR };\r\n}    \r\n\r\nexport function logInAsync(username, password) {\r\n    return async function (dispatch) {\r\n        const body = new URLSearchParams();\r\n        body.set('username', username);\r\n        body.set('password', password);\r\n        const response = await fetch('/user/login', {\r\n            method: 'POST',\r\n            body,\r\n        });\r\n        if (200 <= response.status && response.status < 300) {\r\n            dispatch(loginAction(await response.json()));\r\n        } else if (400 <= response.status && response.status < 500) {\r\n            dispatch(authError());\r\n        } else {\r\n            dispatch(unknownError());\r\n        }\r\n    };\r\n}\r\n\r\nexport function logOutAsync() {\r\n    return async function(dispatch) {\r\n        const { status } = await fetch('/user/logout', { method: 'POST' });\r\n        if (200 <= status && status < 300) {\r\n            return dispatch(logoutAction());\r\n        } else {\r\n            return dispatch(unknownError())\r\n        }\r\n    };\r\n}\r\n\r\n","import { Button } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { logInAsync } from '../actions/user';\r\n\r\nclass LoginForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            submitted: false,\r\n        };\r\n    }\r\n\r\n    async onSubmit(e) {\r\n        e.preventDefault();\r\n        const { logIn, history } = this.props;\r\n        const { username, password } = this.state;\r\n        this.setState({ submitted: true });\r\n        await logIn(username, password);\r\n        history.replace('/');\r\n    }\r\n\r\n    onChangeField({ target: { name, value } }) {\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { username, password, submitted } = this.state;\r\n        return (\r\n            <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={this.onSubmit.bind(this)}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    label=\"Username\"\r\n                    value={username}\r\n                    onChange={this.onChangeField.bind(this)} />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    value={password}\r\n                    onChange={this.onChangeField.bind(this)}\r\n                />\r\n                <Button type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    disabled={!username || !password || submitted}\r\n                >Log In</Button>\r\n            </form>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root, & .MuiButton-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        '& .MuiTextField-root': {\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({ logIn: (username, password) => dispatch(logInAsync(username, password)) });\r\n\r\nconst withRedux = connect(null, mapDispatchToProps);\r\n\r\nexport default withRedux(withRouter(withStyles(styles)(LoginForm)));\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\n// https://medium.com/better-programming/building-basic-react-authentication-e20a574d5e71\r\n\r\nfunction PrivateRoute({ username, component: Component, ...rest }) {\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        username ? (\r\n          <Component {...props} />\r\n        ) : (\r\n            <Redirect\r\n              to={{ pathname: '/login', state: { referer: props.location } }}\r\n            />\r\n          )\r\n      }\r\n    />\r\n  );\r\n  \r\n}\r\n\r\nconst withRedux = connect(({ user: { name: username } }) => ({ username }), null);\r\n\r\nexport default withRedux(PrivateRoute);","import { Button, TextField, withStyles } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass SignupForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            username: '',\r\n            password: '',\r\n            password2: '',\r\n            available: true,\r\n            submitted: false,\r\n        };\r\n    }\r\n\r\n    onChange({ target: { name, value } }) {\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    async onSubmit(e) {\r\n        e.preventDefault();\r\n        this.setState({ submitted: true });\r\n        try {\r\n            const { firstname, lastname, username, password } = this.state;\r\n            const body = new URLSearchParams();\r\n            body.set('firstname', firstname);\r\n            body.set('lastname', lastname);\r\n            body.set('username', username);\r\n            body.set('password', password);\r\n            const { status } = await fetch('/user', {\r\n                method: 'POST',\r\n                body,\r\n            });\r\n            if (status === 201) {\r\n                this.setState({\r\n                    firstname: '',\r\n                    lastname: '',\r\n                    username: '',\r\n                    password: '',\r\n                    password2: '',\r\n                });\r\n            }\r\n        } finally {\r\n            this.setState({ submitted: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { firstname, lastname, username, available, password, password2, submitted } = this.state;\r\n        const { classes } = this.props;\r\n        return (\r\n            <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={this.onSubmit.bind(this)}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name=\"firstname\"\r\n                    label=\"First Name\"\r\n                    helperText={!firstname && 'Required.'}\r\n                    error={!firstname}\r\n                    value={firstname}\r\n                    onChange={this.onChange.bind(this)}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name=\"lastname\"\r\n                    label=\"Last Name\"\r\n                    helperText={!lastname && 'Required.'}\r\n                    error={!lastname}\r\n                    value={lastname}\r\n                    onChange={this.onChange.bind(this)}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    label=\"Username\"\r\n                    helperText={!username ? 'Required.' : !available && `\"${username}\" is not available.`}\r\n                    error={!username || !available}\r\n                    value={username}\r\n                    onChange={this.onChange.bind(this)}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    helperText={!password && 'Required.'}\r\n                    error={!password}\r\n                    value={password}\r\n                    onChange={this.onChange.bind(this)}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"password\"\r\n                    name=\"password2\"\r\n                    label=\"Repeat Password\"\r\n                    helperText={password !== password2 && 'Passwords don\\'t match.'}\r\n                    error={password !== password2}\r\n                    value={password2}\r\n                    onChange={this.onChange.bind(this)}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    disabled={!firstname || !lastname || !username || !available || !password || password !== password2 || submitted}\r\n                    ref={this.submitButton}\r\n                >Sign Up</Button>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    async componentDidUpdate(prevProps, { username: prevUsername }) {\r\n        const { username } = this.state;\r\n        if (username && username !== prevUsername) {\r\n            const { status } = await fetch(`/user/${username}`, { method: 'HEAD' });\r\n            this.setState({ available: status === 404 });\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root, & .MuiButton-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        '& .MuiTextField-root': {\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nexport default withRouter(withStyles(styles)(SignupForm));","export const REQUEST_ALL_VACATIONS = 'REQUEST_ALL_VACATIONS';\r\nexport const RECEIVE_ALL_VACATIONS = 'RECEIVE_ALL_VACATIONS';\r\nexport const RECEIVE_ONE_VACATION = 'RECEIVE_ONE_VACATION';\r\nexport const SET_FOLLOWING = 'SET_FOLLOWING';\r\nexport const ERROR = 'ERROR';\r\n\r\nfunction requestAllVacations() {\r\n    return { type: REQUEST_ALL_VACATIONS };\r\n}\r\n\r\nfunction receiveAllVacations(payload) {\r\n    return { type: RECEIVE_ALL_VACATIONS, payload };\r\n}\r\n\r\nfunction receiveOneVacation(payload) {\r\n    return { type: RECEIVE_ONE_VACATION, payload };\r\n}\r\n\r\nfunction setFollowing(id, isFollowing) {\r\n    return { type: SET_FOLLOWING, payload: { id, isFollowing } };\r\n}\r\n\r\nfunction error({ status, statusText }) {\r\n    return { type: ERROR, payload: { status, statusText } };\r\n}\r\n\r\nexport function loadVacationsAsync() {\r\n    return async function (dispatch) {\r\n        dispatch(requestAllVacations());\r\n        const response = await fetch('/vacation/all');\r\n        if (200 <= response.status && response.status < 300) {\r\n            const vacations = await response.json();\r\n            return dispatch(receiveAllVacations(vacations));\r\n        }\r\n        else {\r\n            return dispatch(error(response));\r\n        }\r\n    };\r\n}\r\n\r\nexport function setFollowingAsync(vacationId, isFollowing) {\r\n    return async function (dispatch) {\r\n        dispatch(setFollowing(vacationId, isFollowing));\r\n        const response = await fetch(`/vacation/${vacationId}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                isFollowing,\r\n            }),\r\n        });\r\n        if (200 <= response.status && response.status < 300) {\r\n            const vacation = await response.json();\r\n            return dispatch(receiveOneVacation(vacation));\r\n        } else {\r\n            return dispatch(error(response));\r\n        }\r\n    };\r\n}\r\n\r\n","import { Badge, Card, CardActions, CardContent, CardMedia, Typography, withStyles } from '@material-ui/core';\r\nimport { ToggleButton } from '@material-ui/lab';\r\nimport { Html5Entities } from 'html-entities';\r\nimport React from 'react';\r\n\r\nconst entities = new Html5Entities();\r\n\r\nfunction Vacation({ classes, desc, from, to, picture, price, followers, isFollowing, onChangeFollowing }) {\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardMedia\r\n                className={classes.media}\r\n                image={picture}\r\n                title={desc}\r\n            />\r\n            <CardContent>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                    {desc}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                    {entities.decode(`${from.toDateString()}&ndash;${to.toDateString()}`)}\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                    &euro;{price}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Badge badgeContent={followers} color=\"primary\">\r\n                    <ToggleButton value=\"check\" selected={Boolean(isFollowing)} onChange={() => onChangeFollowing(!isFollowing)} >\r\n                        <Typography variant=\"button\">\r\n                            Follow\r\n                        </Typography>\r\n                    </ToggleButton>\r\n                </Badge>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n};\r\n\r\nexport default withStyles(styles)(Vacation);\r\n\r\n","import { Grid, Typography, withStyles } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { logOutAsync } from '../actions/user';\r\nimport { loadVacationsAsync, setFollowingAsync } from '../actions/vacations';\r\nimport Vacation from '../components/vacation';\r\n\r\nclass HomePage extends Component {\r\n\r\n    onChangeFollowing(vacationId, isFollowing) {\r\n        this.props.setFollowing(vacationId, isFollowing);\r\n    }\r\n\r\n    render() {\r\n        const { classes, username, logOut, vacations } = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <Typography className={classes.logout}>\r\n                    {username} (<Link to=\"/login\" onClick={logOut}>log out</Link>)\r\n                </Typography>\r\n                <Grid container spacing={4}>\r\n                    {vacations.map(({ id, from, to, ...rest }) => (\r\n                        <Grid item key={id} xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                            <Vacation\r\n                                from={new Date(from)}\r\n                                to={new Date(to)}\r\n                                {...rest}\r\n                                onChangeFollowing={this.onChangeFollowing.bind(this, id)}\r\n                            />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.loadVacations();\r\n    }\r\n\r\n}\r\n\r\nconst styles = {\r\n    root: {\r\n        padding: '2rem',\r\n        backgroundColor: '#f5f5f5',\r\n    },\r\n    logout: {\r\n        float: 'right',\r\n    },\r\n};\r\n\r\nconst mapStateToProps = ({ user: { name: username }, vacations: { vacations } }) => ({ username, vacations });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    logOut: () => dispatch(logOutAsync()),\r\n    loadVacations: () => dispatch(loadVacationsAsync()),\r\n    setFollowing: (vacationId, isFollowing) => dispatch(setFollowingAsync(vacationId, isFollowing)),\r\n});\r\n\r\nconst withRedux = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default withRedux(withRouter(withStyles(styles)(HomePage)));\r\n\r\n","import './App.css';\r\nimport React from 'react';\r\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom';\r\nimport LoginForm from './pages/login-form';\r\nimport PrivateRoute from './components/private-route';\r\nimport SignupForm from './pages/signup-form';\r\nimport HomePage from './pages/home-page';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/signup\">\r\n          <SignupForm />\r\n          <Link to=\"/login\">Already have an account?</Link>\r\n        </Route>\r\n        <Route exact path=\"/login\">\r\n          <LoginForm />\r\n          <Link to=\"/signup\">Don't have an account yet?</Link>\r\n        </Route>\r\n        <PrivateRoute exact path=\"/\" component={HomePage} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\nimport { reduceUser } from '../reducers/user';\r\nimport { reduceVacations } from '../reducers/vacations';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    user: reduceUser,\r\n    vacations: reduceVacations,\r\n  },\r\n});\r\n","import { AUTH_ERROR, UNKNOWN_ERROR, LOGIN, LOGOUT } from '../actions/user';\r\n\r\nexport function reduceUser({ error, ...data } = { error: false }, { type, payload }) {\r\n  switch (type) {\r\n    case LOGIN:\r\n      return { error: false, ...payload };\r\n    case LOGOUT:\r\n      return { error: false };\r\n    case AUTH_ERROR:\r\n      return { error: true };\r\n    case UNKNOWN_ERROR:\r\n      return { error: true, ...data }\r\n    default:\r\n      return { error, ...data };\r\n  }\r\n}\r\n\r\n","import { LOGOUT } from '../actions/user';\r\nimport { RECEIVE_ALL_VACATIONS, RECEIVE_ONE_VACATION, REQUEST_ALL_VACATIONS, SET_FOLLOWING, ERROR } from '../actions/vacations';\r\n\r\nexport function reduceVacations({ error, loading, vacations } = { error: false, loading: false, vacations: [] }, { type, payload }) {\r\n    switch (type) {\r\n        case REQUEST_ALL_VACATIONS:\r\n            return { error: false, loading: true, vacations };\r\n        case RECEIVE_ALL_VACATIONS:\r\n            return { error: false, loading: false, vacations: payload };\r\n        case RECEIVE_ONE_VACATION:\r\n            return { error: false, loading: false, vacations: vacations.map(vacation => vacation.id === payload.id ? payload : vacation) };\r\n        case SET_FOLLOWING:\r\n            return {\r\n                error: false,\r\n                loading: false,\r\n                vacations: vacations.map(({ id, isFollowing, ...rest }) => ({\r\n                    id,\r\n                    isFollowing: id === payload.id ? payload.isFollowing : isFollowing,\r\n                    ...rest,\r\n                })),\r\n            };\r\n        case ERROR:\r\n            return { error: true, loading: false, vacations };\r\n        case LOGOUT:\r\n            return { error: false, loading: false, vacations: [] };\r\n        default:\r\n            return { error, loading, vacations };\r\n    }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}