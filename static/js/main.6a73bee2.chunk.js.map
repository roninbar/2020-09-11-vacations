{"version":3,"sources":["features/userSlice.js","components/private-route.js","components/vacation.js","features/vacationsSlice.js","pages/home-page.js","pages/login-form.js","pages/signup-form.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["reset","user","id","name","role","userSlice","createSlice","initialState","error","reducers","login","payload","logout","authError","status","statusText","logOutAsync","dispatch","a","fetch","method","actions","withRedux","connect","username","Component","component","rest","render","props","to","pathname","state","referer","location","entities","Html5Entities","Vacation","this","classes","desc","from","picture","price","followers","isFollowing","onChangeFollowing","userRole","Card","CardMedia","className","media","image","title","GridListTileBar","actionIcon","IconButton","icon","CardContent","Typography","variant","gutterBottom","decode","toDateString","CardActions","Badge","badgeContent","color","ToggleButton","value","selected","Boolean","onChange","Delete","styles","position","height","opacity","withStyles","vacationsSlice","loading","vacations","requestAllVacations","receiveAllVacations","receiveOneVacation","vacation","find","v","Object","assign","push","setFollowing","extraReducers","type","truncate","HomePage","vacationId","setFollowingAsync","root","Grid","container","spacing","map","item","key","xs","sm","md","lg","xl","Date","bind","loadVacationsAsync","mapDispatchToProps","response","json","headers","body","JSON","stringify","withRouter","padding","backgroundColor","float","LoginForm","password","submitted","e","preventDefault","logInAsync","history","setState","replace","target","noValidate","autoComplete","onSubmit","TextField","label","onChangeField","Button","size","disabled","URLSearchParams","set","theme","margin","width","SignupForm","firstname","lastname","password2","available","helperText","ref","submitButton","prevProps","prevUsername","flexGrow","menuButton","marginRight","AppBar","Toolbar","edge","aria-label","onClick","exact","path","configureStore","reducer","userReducer","vacationsReducer","window","hostname","match","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6a73bee2.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nfunction reset(user) {\r\n    user.id = 0;\r\n    user.name = '';\r\n    user.role = '';\r\n}\r\n\r\nconst userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        error: false,\r\n        id: 0,\r\n        name: '',\r\n        role: '',\r\n    },\r\n    reducers: {\r\n        login(user, { payload: { id, name, role } }) {\r\n            user.error = false;\r\n            user.id = id;\r\n            user.name = name;\r\n            user.role = role;\r\n        },\r\n        logout(user) {\r\n            user.error = false;\r\n            reset(user);\r\n        },\r\n        authError(user) {\r\n            user.error = true;\r\n            reset(user);\r\n        },\r\n        error(user, { payload: { status, statusText } }) {\r\n            user.error = { status, statusText };\r\n            reset(user);\r\n        },\r\n    },\r\n});\r\n\r\nexport function logInAsync(username, password) {\r\n    return async function (dispatch) {\r\n        const body = new URLSearchParams();\r\n        body.set('username', username);\r\n        body.set('password', password);\r\n        const response = await fetch('/user/login', {\r\n            method: 'POST',\r\n            body,\r\n        });\r\n        if (200 <= response.status && response.status < 300) {\r\n            dispatch(login(await response.json()));\r\n        } else if (400 <= response.status && response.status < 500) {\r\n            dispatch(authError());\r\n        } else {\r\n            const { status, statusText } = response;\r\n            dispatch(error({ status, statusText }));\r\n        }\r\n    };\r\n}\r\n\r\nexport function logOutAsync() {\r\n    return async function (dispatch) {\r\n        const { status, statusText } = await fetch('/user/logout', { method: 'POST' });\r\n        if (200 <= status && status < 300) {\r\n            return dispatch(logout());\r\n        } else {\r\n            return dispatch(error({ status, statusText }));\r\n        }\r\n    };\r\n}\r\n\r\nexport const { login, logout, authError, error } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\n// https://medium.com/better-programming/building-basic-react-authentication-e20a574d5e71\r\n\r\nfunction PrivateRoute({ username, component: Component, ...rest }) {\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        username ? (\r\n          <Component {...props} />\r\n        ) : (\r\n            <Redirect\r\n              to={{ pathname: '/login', state: { referer: props.location } }}\r\n            />\r\n          )\r\n      }\r\n    />\r\n  );\r\n  \r\n}\r\n\r\nconst withRedux = connect(({ user: { name: username } }) => ({ username }), null);\r\n\r\nexport default withRedux(PrivateRoute);","import { Badge, Card, CardActions, CardContent, CardMedia, GridListTileBar, IconButton, Typography, withStyles } from '@material-ui/core';\r\nimport { Delete } from '@material-ui/icons';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { ToggleButton } from '@material-ui/lab';\r\nimport { Html5Entities } from 'html-entities';\r\nimport React, { Component } from 'react';\r\n\r\nconst entities = new Html5Entities();\r\n\r\nclass Vacation extends Component {\r\n\r\n    render() {\r\n        const { classes, desc, from, to, picture, price, followers, isFollowing, onChangeFollowing, userRole } = this.props;\r\n        return (\r\n            <Card>\r\n                <CardMedia className={classes.media} image={picture} title={desc} >\r\n                    {userRole === 'admin' &&\r\n                        <GridListTileBar actionIcon={\r\n                            <IconButton className={classes.icon}>\r\n                                <EditIcon />\r\n                            </IconButton>\r\n                        }\r\n                        />\r\n                    }\r\n                </CardMedia>\r\n                <CardContent>\r\n                    <Typography variant=\"h5\" gutterBottom>\r\n                        {desc}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" gutterBottom>\r\n                        {entities.decode(`${from.toDateString()}&ndash;${to.toDateString()}`)}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\">\r\n                        &euro;{price}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                    {userRole === 'user' &&\r\n                        <Badge badgeContent={followers} color=\"primary\">\r\n                            <ToggleButton value=\"check\" selected={Boolean(isFollowing)} onChange={() => onChangeFollowing(!isFollowing)} >\r\n                                <Typography variant=\"button\">\r\n                                    Follow\r\n                            </Typography>\r\n                            </ToggleButton>\r\n                        </Badge>\r\n                    }\r\n                    {userRole === 'admin' &&\r\n                        <IconButton>\r\n                            <Delete />\r\n                        </IconButton>\r\n                    }\r\n                </CardActions>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst styles = {\r\n    media: {\r\n        position: 'relative',\r\n        height: 140,\r\n        [`& .MuiGridListTileBar-root`]: {\r\n            opacity: 0,\r\n        },\r\n        [`&:hover .MuiGridListTileBar-root`]: {\r\n            opacity: 1,\r\n        },\r\n    },\r\n    icon: {\r\n        color: 'rgba(255, 255, 255, 0.54)',\r\n    },\r\n};\r\n\r\nexport default withStyles(styles)(Vacation);\r\n\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { logout } from './userSlice';\r\n\r\nconst vacationsSlice = createSlice({\r\n    name: 'vacations',\r\n    initialState: {\r\n        error: false,\r\n        loading: false,\r\n        vacations: [],\r\n    },\r\n    reducers: {\r\n        requestAllVacations(state) {\r\n            state.error = false;\r\n            state.loading = true;\r\n        },\r\n        receiveAllVacations(state, { payload: vacations }) {\r\n            state.error = false;\r\n            state.loading = false;\r\n            state.vacations = vacations;\r\n        },\r\n        receiveOneVacation(state, { payload: { id, ...rest } }) {\r\n            state.error = false;\r\n            state.loading = false;\r\n            const vacation = state.vacations.find(v => v.id === id);\r\n            if (vacation) {\r\n                Object.assign(vacation, { ...rest });\r\n            } else {\r\n                state.vacations.push({ id, ...rest });\r\n            }\r\n        },\r\n        setFollowing(state, { payload: { id, isFollowing } }) {\r\n            state.error = false;\r\n            const vacation = state.vacations.find(v => v.id === id);\r\n            if (vacation) {\r\n                vacation.isFollowing = isFollowing;\r\n            } else {\r\n                state.error = { status: 404, statusText: 'Not Found' };\r\n            }\r\n        },\r\n        error(state, { payload: { status, statusText } }) {\r\n            state.error = { status, statusText };\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [logout.type](state) {\r\n            state.vacations = [];\r\n        },\r\n    },\r\n});\r\n\r\nexport function loadVacationsAsync() {\r\n    return async function (dispatch) {\r\n        dispatch(requestAllVacations());\r\n        const response = await fetch('/vacation/all');\r\n        if (200 <= response.status && response.status < 300) {\r\n            const vacations = await response.json();\r\n            return dispatch(receiveAllVacations(vacations));\r\n        }\r\n        else {\r\n            const { status, statusText } = response;\r\n            dispatch(error({ status, statusText }));\r\n        }\r\n    };\r\n}\r\n\r\nexport function setFollowingAsync(id, isFollowing) {\r\n    return async function (dispatch) {\r\n        dispatch(setFollowing({ id, isFollowing }));\r\n        const response = await fetch(`/vacation/${id}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                isFollowing,\r\n            }),\r\n        });\r\n        if (200 <= response.status && response.status < 300) {\r\n            const vacation = await response.json();\r\n            return dispatch(receiveOneVacation(vacation));\r\n        } else {\r\n            const { status, statusText } = response;\r\n            dispatch(error({ status, statusText }));\r\n        }\r\n    };\r\n}\r\n\r\nexport const { requestAllVacations, receiveAllVacations, receiveOneVacation, setFollowing, truncate, error } = vacationsSlice.actions;\r\n\r\nexport default vacationsSlice.reducer;\r\n\r\n","import { Grid, withStyles } from '@material-ui/core';\r\nimport Vacation from 'components/vacation';\r\nimport { logOutAsync } from 'features/userSlice';\r\nimport { loadVacationsAsync, setFollowingAsync } from 'features/vacationsSlice';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass HomePage extends Component {\r\n\r\n    onChangeFollowing(vacationId, isFollowing) {\r\n        this.props.setFollowingAsync(vacationId, isFollowing);\r\n    }\r\n\r\n    render() {\r\n        const { classes, userRole, vacations } = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                {/* <Typography className={classes.logout}>\r\n                    {username} (<Link to=\"/login\" onClick={logOutAsync}>log out</Link>)\r\n                </Typography> */}\r\n                <Grid container spacing={4}>\r\n                    {vacations.map(({ id, from, to, ...rest }) => (\r\n                        <Grid item key={id} xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                            <Vacation\r\n                                from={new Date(from)}\r\n                                to={new Date(to)}\r\n                                {...rest}\r\n                                onChangeFollowing={this.onChangeFollowing.bind(this, id)}\r\n                                userRole={userRole}\r\n                            />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.loadVacationsAsync();\r\n    }\r\n\r\n}\r\n\r\nconst styles = {\r\n    root: {\r\n        padding: '2rem',\r\n        backgroundColor: '#f5f5f5',\r\n    },\r\n    logout: {\r\n        float: 'right',\r\n    },\r\n};\r\n\r\nconst mapStateToProps = ({ user: { role: userRole }, vacations: { vacations } }) => ({ userRole, vacations });\r\n\r\nconst mapDispatchToProps = { logOutAsync, loadVacationsAsync, setFollowingAsync };\r\n\r\nconst withRedux = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default withRedux(withRouter(withStyles(styles)(HomePage)));\r\n\r\n","import { Button } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { logInAsync } from 'features/userSlice';\r\n\r\nclass LoginForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            submitted: false,\r\n        };\r\n    }\r\n\r\n    async onSubmit(e) {\r\n        e.preventDefault();\r\n        const { logInAsync, history } = this.props;\r\n        const { username, password } = this.state;\r\n        this.setState({ submitted: true });\r\n        await logInAsync(username, password);\r\n        history.replace('/');\r\n    }\r\n\r\n    onChangeField({ target: { name, value } }) {\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { username, password, submitted } = this.state;\r\n        return (\r\n            <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={this.onSubmit.bind(this)}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    label=\"Username\"\r\n                    value={username}\r\n                    onChange={this.onChangeField.bind(this)} />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    value={password}\r\n                    onChange={this.onChangeField.bind(this)}\r\n                />\r\n                <Button type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    disabled={!username || !password || submitted}\r\n                >Log In</Button>\r\n            </form>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root, & .MuiButton-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        '& .MuiTextField-root': {\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst mapDispatchToProps = { logInAsync };\r\n\r\nconst withRedux = connect(null, mapDispatchToProps);\r\n\r\nexport default withRedux(withRouter(withStyles(styles)(LoginForm)));\r\n\r\n","import { Button, TextField, withStyles } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass SignupForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            username: '',\r\n            password: '',\r\n            password2: '',\r\n            available: true,\r\n            submitted: false,\r\n        };\r\n    }\r\n\r\n    onChange({ target: { name, value } }) {\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    async onSubmit(e) {\r\n        e.preventDefault();\r\n        this.setState({ submitted: true });\r\n        try {\r\n            const { firstname, lastname, username, password } = this.state;\r\n            const body = new URLSearchParams();\r\n            body.set('firstname', firstname);\r\n            body.set('lastname', lastname);\r\n            body.set('username', username);\r\n            body.set('password', password);\r\n            const { status } = await fetch('/user', {\r\n                method: 'POST',\r\n                body,\r\n            });\r\n            if (status === 201) {\r\n                this.setState({\r\n                    firstname: '',\r\n                    lastname: '',\r\n                    username: '',\r\n                    password: '',\r\n                    password2: '',\r\n                });\r\n            }\r\n        } finally {\r\n            this.setState({ submitted: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { firstname, lastname, username, available, password, password2, submitted } = this.state;\r\n        const { classes } = this.props;\r\n        return (\r\n            <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={this.onSubmit.bind(this)}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name=\"firstname\"\r\n                    label=\"First Name\"\r\n                    helperText={!firstname && 'Required.'}\r\n                    error={!firstname}\r\n                    value={firstname}\r\n                    onChange={this.onChange.bind(this)}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name=\"lastname\"\r\n                    label=\"Last Name\"\r\n                    helperText={!lastname && 'Required.'}\r\n                    error={!lastname}\r\n                    value={lastname}\r\n                    onChange={this.onChange.bind(this)}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    label=\"Username\"\r\n                    helperText={!username ? 'Required.' : !available && `\"${username}\" is not available.`}\r\n                    error={!username || !available}\r\n                    value={username}\r\n                    onChange={this.onChange.bind(this)}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    helperText={!password && 'Required.'}\r\n                    error={!password}\r\n                    value={password}\r\n                    onChange={this.onChange.bind(this)}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"password\"\r\n                    name=\"password2\"\r\n                    label=\"Repeat Password\"\r\n                    helperText={password !== password2 && 'Passwords don\\'t match.'}\r\n                    error={password !== password2}\r\n                    value={password2}\r\n                    onChange={this.onChange.bind(this)}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    disabled={!firstname || !lastname || !username || !available || !password || password !== password2 || submitted}\r\n                    ref={this.submitButton}\r\n                >Sign Up</Button>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    async componentDidUpdate(prevProps, { username: prevUsername }) {\r\n        const { username } = this.state;\r\n        if (username && username !== prevUsername) {\r\n            const { status } = await fetch(`/user/${username}`, { method: 'HEAD' });\r\n            this.setState({ available: status === 404 });\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root, & .MuiButton-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        '& .MuiTextField-root': {\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nexport default withRouter(withStyles(styles)(SignupForm));","import './App.css';\r\nimport { AppBar, Button, IconButton, Toolbar, Typography, withStyles } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { logOutAsync } from 'features/userSlice';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom';\r\nimport PrivateRoute from './components/private-route';\r\nimport HomePage from './pages/home-page';\r\nimport LoginForm from './pages/login-form';\r\nimport SignupForm from './pages/signup-form';\r\n\r\nfunction App({ classes, username, logOutAsync }) {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>Vacations</Typography>\r\n            {username ?\r\n              <Button color=\"inherit\" onClick={logOutAsync}>Log Out</Button> :\r\n              <Button color=\"inherit\">Log In</Button>}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Switch>\r\n          <Route exact path=\"/signup\">\r\n            <SignupForm />\r\n            <Link to=\"/login\">Already have an account?</Link>\r\n          </Route>\r\n          <Route exact path=\"/login\">\r\n            <LoginForm />\r\n            <Link to=\"/signup\">Don't have an account yet?</Link>\r\n          </Route>\r\n          <PrivateRoute exact path=\"/\" component={HomePage} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  logout: {\r\n    float: 'right',\r\n  },\r\n});\r\n\r\nfunction mapStateToProps({ user: { name: username } }) {\r\n  return { username };\r\n}\r\n\r\nconst mapDispatchToProps = { logOutAsync };\r\n\r\nconst withRedux = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default withRedux(withStyles(styles)(App));\r\n\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from 'features/userSlice';\r\nimport vacationsReducer from 'features/vacationsSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n    vacations: vacationsReducer,\r\n  },\r\n});\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}